from telegram import Update, InputFile
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
from openpyxl import Workbook, load_workbook

TEXTS = {
    'en': {
        'welcome': "Welcome {name} to our exploration center!",
        'no_permission': "Sorry, you don't have permission to use this bot.",
        'provide_location': "Please provide a location in the correct format (e.g., gy2).",
        'simple_info_header': "Location: {location}",
        'color_count': "\n{0} -> {1}",
        'simple_info_footer': "\nElapsed time: {time_difference} minutes\nPosted by: {user}",
        'no_info_found': "No information found for location {location}.",
        'saved_successfully': "Saved!\nLocation: {location}\nColor Details: {msg}\nPosted By: {user_posted}",
        'message_forwarded': "The message must be forwarded from Chat Wars (@ChatWarsBot)!",
        'message_in_group': "Report received, thank you for your help! ü´°",
        'processing_info': "Processing information...",
        'invalid_message': "Invalid message format!",
        'get_excel_error': "File not found.",
        'get_excel_error_exception': "An error occurred: {error}",
        'map_error': "Error sending the image: {error}",
        'choose_language': "Please choose your preferred language:",
        'default': 'ERROR:XXX>Sorry, the requested text is not available.',
        'help_message': (
            "Help:\n",
            "Use /i + location (e.g., gy2) to get complete information about a specific tile.\n"
            "Use /info + location (e.g., y31) to get the saved text in the fifth cell of that location.\n"
            "Use /get_excel to get the Excel file with the database locations.\n"
            "Use /set_language to change the bot's language."
        ),
    },
    'es': {
        'welcome': "Bienvenido/a {name} a nuestro centro de exploracion!",
        'no_permission': "Lo siento, no tienes permiso para usar este bot.",
        'provide_location': "Por favor, proporciona una ubicaci√≥n en el formato adecuado (por ejemplo, gy2).",
        'simple_info_header': "Ubicaci√≥n: {location}",
        'color_count': "\n{0} -> {1}",
        'simple_info_footer': "\nTiempo transcurrido: {time_difference} minutos\nPublicado por: {user}",
        'no_info_found': "No se encontr√≥ informaci√≥n para la ubicaci√≥n {location}.",
        'saved_successfully': "¬°Guardado!\nUbicaci√≥n: {location}\nDetalles de colores: {msg}\nPublicado por: {user_posted}",
        'message_forwarded': "¬°El mensaje debe ser reenviado desde Chat Wars (@ChatWarsBot)!",
        'message_in_group': "Reporte recibido, ¬°gracias por tu ayuda! ü´°",
        'processing_info': "Procesando informaci√≥n...",
        'invalid_message': "¬°Mensaje enviado no v√°lido!",
        'get_excel_error': "El archivo no se encontr√≥.",
        'get_excel_error_exception': "Ocurri√≥ un error: {error}",
        'map_error': "Error al enviar la imagen: {error}",
        'choose_language': "Por favor, elige tu idioma preferido:",
        'default': 'ERROR:XXX>Lo siento, el texto solicitado no est√° disponible.',
        'help_message': (
            "Ayuda:\n",
            "Usa /i + ubicaci√≥n (ej: gy2) para obtener la informaci√≥n completa de una casilla espec√≠fica.\n"
            "Usa /info + ubicaci√≥n (ej: y41) para obtener el texto guardado en la quinta casilla de esa ubicaci√≥n.\n"
            "Usa /get_excel para obtener el Excel con las ubicaciones de la base de datos.\n"
            "Usa /set_language para cambiar el idioma del bot."
        ),
    },
    'ru': {
        'welcome': "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {name}, –≤ –Ω–∞—à –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä!",
        'no_permission': "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –±–æ—Ç–∞.",
        'provide_location': "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, gy2).",
        'simple_info_header': "–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {location}",
        'color_count': "\n{0} -> {1}",
        'simple_info_footer': "\n–ü—Ä–æ—à–ª–æ –≤—Ä–µ–º–µ–Ω–∏: {time_difference} –º–∏–Ω—É—Ç\n–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {user}",
        'no_info_found': "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é {location} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.",
        'saved_successfully': "–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ!\n–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {location}\n–î–µ—Ç–∞–ª–∏ —Ü–≤–µ—Ç–æ–≤: {msg}\n–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {user_posted}",
        'message_forwarded': "–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–æ–≤–∞–Ω–æ –æ—Ç Chat Wars (@ChatWarsBot)!",
        'message_in_group': "–û—Ç—á–µ—Ç –ø–æ–ª—É—á–µ–Ω, —Å–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –ø–æ–º–æ—â—å! ü´°",
        'processing_info': "–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏...",
        'invalid_message': "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è!",
        'get_excel_error': "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.",
        'get_excel_error_exception': "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {error}",
        'map_error': "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {error}",
        'choose_language': "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —è–∑—ã–∫:",
        'default': 'ERROR:XXX>–ò–∑–≤–∏–Ω–∏—Ç–µ, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.',
        'help_message': (
            "–ü–æ–º–æ—â—å:\n",
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /i + –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, gy2), —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–ª–∏—Ç–∫–µ.\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /info + –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, y41), —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –ø—è—Ç–æ–π —è—á–µ–π–∫–µ —ç—Ç–æ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è.\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /get_excel, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª Excel —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è—Ö.\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /set_language, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –±–æ—Ç–∞."
        ),
    }
}



# Diccionario de idiomas soportados
SUPPORTED_LANGUAGES = ['en', 'es', 'ru']

# Diccionario para almacenar el idioma preferido por cada usuario
USER_LANGUAGES = {}

def detect_language(language_code):
    """Detecta el idioma del usuario basado en el c√≥digo de idioma proporcionado por Telegram."""
    if language_code == None:
        return 'en'
    elif language_code.startswith('es'):
        return 'es'
    elif language_code.startswith('ru'):
        return 'ru'
    else:
        return 'en'

def get_text(update: Update, key):
    """Obtiene el texto en el idioma preferido del usuario o detecta el idioma autom√°ticamente."""
    lang = ""
    if update.effective_user.id in USER_LANGUAGES:
        lang = USER_LANGUAGES[update.effective_user.id]
    else:
        lang = detect_language(update.effective_user.language_code)
        USER_LANGUAGES[update.effective_user.id] = lang  # Guardar la detecci√≥n autom√°tica en el diccionario

    return TEXTS[lang].get(key, TEXTS[lang]['default'])